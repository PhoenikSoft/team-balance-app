spring:
  jpa:
    database: POSTGRESQL
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 10
        order_inserts: true
  datasource:
    platform: postgres
    jdbc-url: jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDB:teambalance}
    username: ${PGUSER:postgres}
    password: ${PGPASSWORD:root}
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    wait-for-jobs-to-complete-on-shutdown: true
    properties:
      org:
        quartz:
          scheduler:
            instanceName: TeamBalanceScheduler
            instanceId: AUTO
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 3
            threadPriority: 5
          jobStore:
            misfireThreshold: 60000
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            isClustered: false
            useProperties: false
            dataSource: quartzDataSource

  sendgrid:
    api-key: ${SENDGRID_API_KEY:dummy}

quartz:
  datasource:
    jdbc-url: jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDB:teambalance}?currentSchema=quartz
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}

forgot-password:
  url: http://localhost:3000/reset-password

cors:
  origins:
    - http://localhost:4200
    - http://localhost:3000
    - http://localhost

voting:
  # 5 min
  timeToVoteInSeconds: 300
  minRating: 1

jwt_secret: ${JWT_SECRET:TB_SECRET}
